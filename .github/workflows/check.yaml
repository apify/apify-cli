# This workflow runs for every pull request to lint and test the proposed changes.

name: Check

on:
    # Push to master will deploy a beta version
    push:
        branches: [master, renovate/**]
    pull_request:
        branches: [master]

jobs:
    build_and_test:
        name: Build & Test
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]
                node-version: [18, 20, 22, 24]

        steps:
            - name: Mask secrets
              run: |
                  echo "::add-mask::${{ secrets.APIFY_TEST_USER_API_TOKEN }}"

            - uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Enable corepack
              run: |
                  corepack enable
                  corepack prepare yarn@stable --activate

            - name: Activate cache for Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  cache: yarn

            - name: Install Dependencies
              run: yarn

            - name: Run Tests
              env:
                  TEST_USER_TOKEN: ${{ secrets.APIFY_TEST_USER_API_TOKEN }}
                  APIFY_CLI_DISABLE_TELEMETRY: 1
              run: yarn test

            - name: Ensure the reference documentation builds
              run: yarn update-docs

    test_python_support:
        name: Test Python template support
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]
                python-version: ["3.9", "3.10", "3.11", "3.12"]
        runs-on: ${{ matrix.os }}

        steps:
            - name: Mask secrets
              run: |
                  echo "::add-mask::${{ secrets.APIFY_TEST_USER_API_TOKEN }}"

            - uses: actions/checkout@v4

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Enable corepack
              run: |
                  corepack enable
                  corepack prepare yarn@stable --activate

            - name: Activate cache for Node.js 22
              uses: actions/setup-node@v4
              with:
                  cache: yarn

            - name: Install Dependencies
              run: yarn

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Run Python tests
              env:
                  TEST_USER_TOKEN: ${{ secrets.APIFY_TEST_USER_API_TOKEN }}
                  APIFY_CLI_DISABLE_TELEMETRY: 1
              run: yarn test-python

    docs:
        name: Docs build
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Source code
              uses: actions/checkout@v4

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Enable corepack
              run: |
                  corepack enable
                  corepack prepare yarn@stable --activate

            - name: Activate cache for Node.js 22
              uses: actions/setup-node@v4
              with:
                  cache: yarn

            - name: Install Dependencies
              run: yarn

            - name: Build & deploy docs
              run: |
                  cd website
                  yarn
                  yarn build

    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Enable corepack
              run: |
                  corepack enable
                  corepack prepare yarn@stable --activate

            - name: Activate cache for Node.js 22
              uses: actions/setup-node@v4
              with:
                  cache: yarn

            - name: Install Dependencies
              run: yarn

            - name: Run lint checks
              run: yarn lint

            - name: Run format checks
              run: yarn format

    build_bundles:
        name: Build Test Bundles (${{ matrix.name }})
        needs: [build_and_test]

        strategy:
            fail-fast: false
            matrix:
                # TODO: windows on arm needs its own build for w/e reason
                include:
                    - os: ubuntu-latest
                      name: unix
                    - os: windows-latest
                      name: windows
                    - os: windows-11-arm
                      name: windows-arm

        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Enable corepack
              run: |
                  corepack enable
                  corepack prepare yarn@stable --activate

            - name: Activate cache for Node.js 22
              uses: actions/setup-node@v4
              with:
                  cache: yarn

            - name: Install Dependencies
              run: yarn

            - name: Install Bun on non-arm
              uses: oven-sh/setup-bun@v2
              if: ${{ matrix.os != 'windows-11-arm' }}
              with:
                  bun-version: latest

            - name: Install Bun on arm
              uses: oven-sh/setup-bun@v2
              if: ${{ matrix.os == 'windows-11-arm' }}
              with:
                  bun-download-url: https://bun.sh/download/latest/win32/x64?avx2=false&profile=false

            # https://github.com/oven-sh/bun/issues/11198
            - name: Fix cross-platform building on Actions
              if: ${{ matrix.os == 'windows-latest' || matrix.os == 'windows-11-arm' }}
              run: |
                  mkdir C:\\test
                  cd C:\\test
                  bun init -y
                  bun build --compile --target=bun-windows-x64 --outfile test index.ts
                  bun build --compile --target=bun-windows-x64-baseline --outfile test index.ts

            - name: Build Bundles
              run: yarn insert-cli-metadata && yarn build-bundles

            - name: Upload Bundles
              uses: actions/upload-artifact@v4
              with:
                  name: apify-cli-bundles-${{ matrix.name }}
                  path: bundles/**
